{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sahil/OneDrive/Pictures/Documents/GitHub/ComputerSeekho_Frontend/Frontend/Next.Js_repo/computer_sekho/lib/config.js"],"sourcesContent":["// API Configuration\r\nexport const API_CONFIG = {\r\n  // Replace with your Spring Boot backend URL\r\n  BASE_URL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8080',\r\n  \r\n  // API Endpoints\r\n  ENDPOINTS: {\r\n    STUDENTS: '/api/students',\r\n    PAYMENT_HISTORY: '/api/receipts',\r\n    PAYMENT_TYPES: '/api/payment-types',\r\n    PROCESS_PAYMENT: '/api/payment-with-type',\r\n    PLACEMENTS: '/api/placements',\r\n    BATCHES: '/api/batches',\r\n    COURSES: '/api/courses',\r\n  }\r\n};\r\n\r\n// Helper function to get full API URL\r\nexport const getApiUrl = (endpoint) => {\r\n  return `${API_CONFIG.BASE_URL}${endpoint}`;\r\n};\r\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AACb,MAAM,aAAa;IACxB,4CAA4C;IAC5C,UAAU,QAAQ,GAAG,CAAC,mBAAmB,IAAI;IAE7C,gBAAgB;IAChB,WAAW;QACT,UAAU;QACV,iBAAiB;QACjB,eAAe;QACf,iBAAiB;QACjB,YAAY;QACZ,SAAS;QACT,SAAS;IACX;AACF;AAGO,MAAM,YAAY,CAAC;IACxB,OAAO,GAAG,WAAW,QAAQ,GAAG,UAAU;AAC5C","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sahil/OneDrive/Pictures/Documents/GitHub/ComputerSeekho_Frontend/Frontend/Next.Js_repo/computer_sekho/app/api/placements/%5Bslug%5D/route.js"],"sourcesContent":["// export async function GET() {\r\n//   return Response.json({\r\n//     course: \"PG DBDA\",\r\n//     batch: \"Aug 2024\",\r\n//     slug: \"pg-dbda-aug-2024\",\r\n//     students: [\r\n//       {\r\n//         name: \"Rohit Sharma\",\r\n//         company: \"TCS\",\r\n//         photo: \"/students/rohit.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Anjali Verma\",\r\n//         company: \"Infosys\",\r\n//         photo: \"/students/anjali.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Aditya Patil\",\r\n//         company: \"Capgemini\",\r\n//         photo: \"/students/aditya.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Neha Singh\",\r\n//         company: \"Wipro\",\r\n//         photo: \"/students/neha.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Manish Gupta\",\r\n//         company: \"Cognizant\",\r\n//         photo: \"/students/manish.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Sneha Joshi\",\r\n//         company: \"Tech Mahindra\",\r\n//         photo: \"/students/sneha.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Karan Mehta\",\r\n//         company: \"LTI\",\r\n//         photo: \"/students/karan.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Pooja Shah\",\r\n//         company: \"Persistent\",\r\n//         photo: \"/students/pooja.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Vikas Rao\",\r\n//         company: \"HCL\",\r\n//         photo: \"/students/vikas.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Riya Jain\",\r\n//         company: \"Accenture\",\r\n//         photo: \"/students/riya.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Amit Dubey\",\r\n//         company: \"Mindtree\",\r\n//         photo: \"/students/amit.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Divya Nair\",\r\n//         company: \"IBM\",\r\n//         photo: \"/students/divya.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Saurabh Mishra\",\r\n//         company: \"Capgemini\",\r\n//         photo: \"/students/saurabh.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Shraddha Kulkarni\",\r\n//         company: \"TCS\",\r\n//         photo: \"/students/shraddha.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Rajesh Shetty\",\r\n//         company: \"Infosys\",\r\n//         photo: \"/students/rajesh.jpg\",\r\n//       },\r\n//       {\r\n//         name: \"Meena Raut\",\r\n//         company: \"LTI\",\r\n//         photo: \"/students/meena.jpg\",\r\n//       },\r\n//     ],\r\n//   });\r\n// }\r\n// app/api/placements/[slug]/route.js\r\n\r\nimport { API_CONFIG, getApiUrl } from \"@/lib/config\";\r\n\r\nexport async function GET(req, { params }) {\r\n  const { slug } = params;\r\n\r\n  try {\r\n    // Resolve slug -> batchId using batches API\r\n    const batchesResponse = await fetch(getApiUrl(API_CONFIG.ENDPOINTS.BATCHES));\r\n    if (!batchesResponse.ok) {\r\n      throw new Error(`Failed to fetch batches: ${batchesResponse.status}`);\r\n    }\r\n    const batches = await batchesResponse.json();\r\n\r\n    const courseMapping = {\r\n      101: \"PG DBDA\",\r\n      98: \"PG DAC\",\r\n      103: \"PRE - CAT\",\r\n    };\r\n\r\n    const slugify = (text) => text?.toLowerCase().replace(/\\s+/g, \"-\") ?? \"\";\r\n\r\n    const matchedBatch = batches.find((batch) => {\r\n      const courseName = courseMapping[batch.courseId] || `Course ${batch.courseId}`;\r\n      const computedSlug = `${slugify(courseName)}-${slugify(batch.batchName)}`;\r\n      return computedSlug === slug;\r\n    });\r\n\r\n    if (!matchedBatch) {\r\n      return Response.json({ students: [] }, { status: 200 });\r\n    }\r\n\r\n    const batchId = matchedBatch.batchId;\r\n\r\n    // Fetch all students and filter by batchId and isPlaced\r\n    const studentsResponse = await fetch(getApiUrl(API_CONFIG.ENDPOINTS.STUDENTS));\r\n    if (!studentsResponse.ok) {\r\n      throw new Error(`Failed to fetch students: ${studentsResponse.status}`);\r\n    }\r\n    const allStudents = await studentsResponse.json();\r\n\r\n    const students = (Array.isArray(allStudents) ? allStudents : [])\r\n      .filter((s) => s.batchId === batchId && s.isPlaced === true)\r\n      .map((s) => {\r\n        const raw = String(s.photoUrl || \"\");\r\n        if (raw.startsWith(\"http\")) {\r\n          return { name: s.studentName, photo: raw };\r\n        }\r\n        // Normalize to Next.js public path\r\n        let normalized = raw.replace(/\\\\/g, \"/\"); // Windows -> URL slashes\r\n        normalized = normalized.replace(/^\\/+/, \"\"); // leading slashes\r\n        normalized = normalized.replace(/^public\\//i, \"\"); // drop leading public/\r\n        const photo = `/${normalized}`; // serve from Next public\r\n        return {\r\n          name: s.studentName,\r\n          photo,\r\n        };\r\n      });\r\n\r\n    return Response.json({ students });\r\n  } catch (error) {\r\n    console.error(\"Error in placement details GET:\", error);\r\n    return Response.json({ students: [] }, { status: 200 });\r\n  }\r\n}\r\n\r\n//future database connect hone ke baad isko replace karna hai slug ka kuch to dekhna padega isme fetching ke time\r\n// import { db } from \"@/lib/db\"; // your DB connection (e.g., Prisma)\r\n// import { NextResponse } from \"next/server\";\r\n\r\n// export async function GET(_, { params }) {\r\n//   const { slug } = params;\r\n\r\n//   const batch = await db.placement.findFirst({\r\n//     where: { slug },\r\n//     include: {\r\n//       students: {\r\n//         where: { placed: true },\r\n//         select: {\r\n//           name: true,\r\n//           company: true,\r\n//           photoUrl: true,\r\n//         },\r\n//       },\r\n//     },\r\n//   });\r\n\r\n//   if (!batch) {\r\n//     return NextResponse.json({ students: [] }, { status: 404 });\r\n//   }\r\n\r\n//   const students = batch.students.map((s) => ({\r\n//     name: s.name,\r\n//     company: s.company,\r\n//     photo: s.photoUrl,\r\n//   }));\r\n\r\n//   return NextResponse.json({ students });\r\n// }\r\n"],"names":[],"mappings":"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","debugId":null}}]
}