# ===========================================
# APPLICATION CONFIGURATION
# ===========================================
spring.application.name=RestApiDemo
server.port=8080

# ===========================================
# JWT CONFIGURATION

# ===========================================
# JWT Secret Key (in production, use a strong secret key)
jwt.secret=your-256-bit-secret-key-here-make-it-very-long-and-secure-for-production-use
jwt.expiration=86400000
jwt.refresh-expiration=604800000
jwt.header=Authorization
jwt.prefix=Bearer 

# ===========================================
# DATABASE CONFIGURATION - MySQL
# ===========================================
# Database URL - Update with your MySQL host, port, and database name
spring.datasource.url=jdbc:mysql://217.21.94.115:3306/u316897014_ComputerSeekho

# Database credentials - Update with your MySQL username and password
spring.datasource.username=u316897014_ComputerSeekho
spring.datasource.password=Nu*6jS8W

# MySQL Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===========================================
# JPA / HIBERNATE CONFIGURATION
# ===========================================
# JPA Provider
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# DDL Auto - Options: create, create-drop, update, validate, none
spring.jpa.hibernate.ddl-auto=update

# Performance optimizations
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.jdbc.fetch_size=50
spring.jpa.properties.hibernate.default_schema=u316897014_ComputerSeekho

# Disable SQL logging in production for better performance
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# ===========================================
# CONNECTION POOL CONFIGURATION - OPTIMIZED FOR HIGH CONCURRENCY
# ===========================================
# HikariCP Configuration for 1000 concurrent requests
spring.datasource.hikari.maximum-pool-size=100
spring.datasource.hikari.minimum-idle=20
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.connection-test-query=SELECT 1

# ===========================================
# SERVER CONFIGURATION - OPTIMIZED FOR HIGH CONCURRENCY
# ===========================================
# Tomcat thread pool configuration
server.tomcat.threads.max=400
server.tomcat.threads.min-spare=50
server.tomcat.max-connections=8192
server.tomcat.accept-count=100
server.tomcat.connection-timeout=20000

# Server settings
server.servlet.context-path=/
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# ===========================================
# CACHE CONFIGURATION
# ===========================================
# Enable caching for better performance
spring.cache.type=caffeine
spring.cache.cache-names=students,courses,batches,payments,staff
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=300s

# ===========================================
# ASYNC CONFIGURATION
# ===========================================
# Async processing configuration
spring.task.execution.pool.core-size=20
spring.task.execution.pool.max-size=50
spring.task.execution.pool.queue-capacity=1000
spring.task.execution.thread-name-prefix=async-Executor-

# ===========================================
# LOGGING CONFIGURATION - OPTIMIZED FOR PRODUCTION
# ===========================================
# Reduce logging in production for better performance
logging.level.com.example.demo=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql=WARN
logging.level.com.zaxxer.hikari=WARN

# ===========================================
# JACKSON CONFIGURATION
# ===========================================
# JSON serialization settings
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.serialization.fail-on-empty-beans=false

# ===========================================
# CORS CONFIGURATION
# ===========================================
# Enable CORS for REST API
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# ===========================================
# ACTUATOR CONFIGURATION
# ===========================================
# Enable Spring Boot Actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoints.web.base-path=/actuator

# ===========================================
# VALIDATION CONFIGURATION
# ===========================================
# Enable validation
spring.jpa.properties.hibernate.validator.apply_to_ddl=true
spring.jpa.properties.hibernate.validator.autoregister_listeners=false

# ===========================================
# ERROR HANDLING
# ===========================================
# Error page configuration
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never
server.error.include-exception=false

# ===========================================
# FILE UPLOAD CONFIGURATION
# ===========================================
# File upload settings (for image/video uploads)
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# ===========================================
# MYSQL SPECIFIC CONFIGURATION
# ===========================================
# MySQL specific settings optimized for connection limits
spring.datasource.hikari.data-source-properties.useSSL=false
spring.datasource.hikari.data-source-properties.allowPublicKeyRetrieval=true
spring.datasource.hikari.data-source-properties.serverTimezone=UTC
spring.datasource.hikari.data-source-properties.autoReconnect=true
spring.datasource.hikari.data-source-properties.failOverReadOnly=false
spring.datasource.hikari.data-source-properties.maxReconnects=3
spring.datasource.hikari.data-source-properties.rewriteBatchedStatements=true
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
spring.datasource.hikari.data-source-properties.connectionTimeout=30000
spring.datasource.hikari.data-source-properties.socketTimeout=60000
spring.datasource.hikari.data-source-properties.zeroDateTimeBehavior=convertToNull

# ===========================================
# PROFILES CONFIGURATION
# ===========================================
# Active profile (can be overridden with -Dspring.profiles.active=prod)
spring.profiles.active=prod





# ===========================================
# CUSTOM APPLICATION PROPERTIES
# ===========================================
# Application specific properties
app.name=RestApiDemo
app.version=1.0.0
app.description=Spring Boot REST API for Educational Institution Management

# Performance monitoring
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
